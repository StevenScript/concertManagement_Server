<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="
           http://maven.apache.org/POM/4.0.0
           https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- ──────────────────────────
         1.  Coordinates
         ────────────────────────── -->
	<groupId>com.example</groupId>
	<artifactId>concertManagement_Server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>concertManagement_Server</name>
	<description>Backend for Concert Management (Spring Boot 3 / JWT / TDD)</description>
	<packaging>jar</packaging>

	<!-- ──────────────────────────
         2.  Parent = Spring Boot
         ────────────────────────── -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version> <!-- or the latest 3.2.x -->
		<relativePath/>          <!-- lookup from Maven Central -->
	</parent>

	<properties>
		<!-- Java 17 is the minimum for Boot 3 -->
		<java.version>17</java.version>

		<!-- Centralise versions that are *not* managed by Spring Boot BOM -->
		<jjwt.version>0.11.5</jjwt.version>
		<maven.compiler.plugin.version>3.14.0</maven.compiler.plugin.version>
		<maven.surefire.plugin.version>3.2.5</maven.surefire.plugin.version>
	</properties>

	<!-- ──────────────────────────
         3.  Dependencies
         ────────────────────────── -->
	<dependencies>

		<!-- ── Core Starters ─────────────────────────────── -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.bucket4j</groupId>
			<artifactId>bucket4j_jdk17-core</artifactId>
			<version>8.14.0</version>
		</dependency>

		<dependency>
			<groupId>com.bucket4j</groupId>
			<artifactId>bucket4j-core</artifactId>
			<version>8.10.1</version>
		</dependency>


		<dependency>
			<groupId>com.bucket4j</groupId>
			<artifactId>bucket4j_jdk17-core</artifactId>
			<version>8.14.0</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-otel</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp</artifactId>
			<version>1.31.0</version>
		</dependency>
		<!-- Validation (Jakarta Bean Validation 3.0) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- ── In‑memory and runtime DB ──────────────── -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>  <!-- only needed when the app really runs -->
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>     <!-- tests and @DataJpaTest use this -->
		</dependency>


		<!-- ── JSON Web Token (JJWT) ─────────────────────── -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId> <!-- or jjwt-gson -->
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- ── Lombok (compile‑only + annotation processor) ─ -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- ── Test Stack ─────────────────────────────────── -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<!-- disable vintage to avoid JUnit4 engine warnings -->
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<!-- ──────────────────────────
         4.  Build Plugins
         ────────────────────────── -->
	<build>
		<plugins>
			<!-- Maven Compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>

			<!-- Surefire (unit tests) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
					<includes>
						<include>**/*Test.java</include>
						<argLine>-Dspring.profiles.active=test</argLine>
					</includes>
				</configuration>
			</plugin>

			<!-- Spring Boot plugin (repackage, run, etc.) -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.example.concertManagement_Server.ConcertManagementServerApplication</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>

